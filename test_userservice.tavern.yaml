---

test_name: Create a user

stages:
  - name: Make sure that new user has unique emailID than ones in the database

    request:
      url: http://localhost/createuser
      json:
        name: karan
        email: karan@gmail.com
        password: abc
      method: POST
      headers:
        content-type: application/json
    response:
      status_code: 201
---

test_name: Change the userâ€™s password

stages:
  - name: Make sure that the desired user's password is changed and that it exits in the database
    request:
      url: http://localhost/updatepassword
      auth:
        - karan@gmail.com
        - abc
      json:
        new_password: xyz
      method: PATCH
      headers:
        content-type: application/json
    response:
      status_code: 200


---

test_name: Try to change the password for a user that does not exist

stages:
  - name: Make sure that the user exits in the database for which the password is to be updated/ changed
    request:
      url: http://localhost/updatepassword
      auth:
        - mk@csu.fullerton.edu
        - mk
      json:
        new_password: mynewpass
      method: PATCH
      headers:
        content-type: application/json
    response:
      status_code: 401

---

test_name: Delete the user

stages:
  - name: Make sure that the user to be deleted exists in the database
    request:
      url: http://localhost/deleteuser
      auth:
        - karan@gmail.com
        - xyz
      method: DELETE
      headers:
        content-type: application/json
    response:
      status_code: 200

---

test_name: Try to change the password for the deleted user

stages:
  - name: Make sure that the deleted user's password cannot be updated/changed
    request:
        url: http://localhost/upatepassword
        auth:
          - karan@gmail.com
          - xyz
        json:
          new_password: abc
        method: PATCH
        headers:
          content-type: application/json
    response:
      status_code: 404
